upstream lightrag_api {
    server host.docker.internal:8000;
}

upstream qdrant_api {
    server qdrant:6333;
}

upstream ollama_api {
    server ollama:11434;
}

server {
    listen 80;
    server_name localhost;

    # API Gateway root
    location / {
        return 200 '{"service": "RAG API Gateway", "endpoints": {"/api": "LightRAG API", "/qdrant": "Qdrant API", "/ollama": "Ollama API"}}';
        add_header Content-Type application/json;
    }

    # LightRAG API
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://lightrag_api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts for LLM responses
        proxy_read_timeout 300s;
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
    }

    # Qdrant API (optional direct access)
    location /qdrant/ {
        proxy_pass http://qdrant_api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Ollama API (optional direct access)
    location /ollama/ {
        proxy_pass http://ollama_api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Long timeouts for model operations
        proxy_read_timeout 600s;
        proxy_connect_timeout 60s;
        proxy_send_timeout 600s;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 '{"status": "healthy"}';
        add_header Content-Type application/json;
    }
}